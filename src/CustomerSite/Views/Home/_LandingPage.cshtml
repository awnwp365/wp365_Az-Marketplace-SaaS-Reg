@*@using Microsoft.Marketplace.SaasKit.Models*@

@using Marketplace.SaaS.Accelerator.Services.Models
@model Marketplace.SaaS.Accelerator.Services.Models.SubscriptionResultExtension

@{
    ViewData["Title"] = "Home";
}
@if (!Model.ShowWelcomeScreen)
{
    <div class="container" id="divHome">
        <form method="post" id="frmIndex">

            <div class="card cm-panel-default mb-2" style="min-height: 500px;">
                <div class="row">
                    <div class="col-md-12 mt-2">
                        <h1 class="display-4">WorkPoint365 Subscription</h1>
                    </div>
                </div>
            @if (Model != null && !string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="row">
                    <div class="col-md-12 alert alert-danger">
                        <strong>Error!</strong> Some Error Occurred During Operation!
                    </div>
                 </div>
            }
            else
            {
                    <div class="row flex-fill">
                        <div class="col-md-8">
                            <div class="intro min-vh-1p pt-2 mb-4">
                                @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                {
                                    <p>Welcome to your new WorkPoint Azure Subscription.</p>
                                    <p>Please review the subscription details below. Clicking <strong>Subscribe</strong> will initiate a task with WorkPoint365 License Management to provision the solution licenses. On completion, you will receive an email with details of your license and instructions for implementation.</p>
                                    <p>If you have any questions or concerns regarding your <strong>WorkPoint365</strong> subscription, please contact your <em>WorkPoint Partner</em> or <a href="https://workpoint365.com/products-solutions/workpoint-365">WorkPoint Sales <i class="fa fa-external-link" aria-hidden="true"></i></a></p>
                                }
                                else
                                {
                                    <p>Please review your subscription details. Any changes to subscription status will initiate a task to WorkPoint365 License Management to implement the necessary changes to license configuration or term. You will receive an email confirmation when complete.</p>
                                    <caption><i class="fa fa-info-circle" aria-hidden="true"></i>&nbsp;<em>Note</em> that Subscriptions can also be managed directly in your <a href="https://portal.azure.com">Azure Portal <i class="fa fa-external-link" aria-hidden="true"></i></a> by any user with the Azure Roles <em>Resource Owner</em> or <em>Resource Contributor</em>.</caption>
                                }
                            </div>

                            <div class="accordion" id="subscriptionDetail">
                                <div class="accordion-item">
                                    <h2 class="accordion-header">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#subscriptionParams" aria-expanded="false" aria-controls="collapseOne">
                                            <img src="/imgs/wp-logo-sm.png" alt="WP365"/>&nbsp;
                                            
                                            @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                            {
                                                <strong>Subscribe to:</strong>
                                            } else {
                                                <strong>Subscription:</strong>
                                            }
                                            &nbsp;@Html.DisplayFor(model => model.OfferId) / <em>@Html.DisplayFor(model => model.PlanId)</em>
                                        </button>
                                    </h2>
                                    <div id="subscriptionParams" class="accordion-collapse collapse" data-bs-parent="#subscriptionDetail">
                                        <div class="accordion-body">

                            <dl class="row text-left">
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("Customer Email")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                    @Html.DisplayFor(model => model.CustomerEmailAddress)
                                </dd>
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("Customer Name ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                    @Html.DisplayFor(model => model.CustomerName)
                                </dd>
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("ID ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                    @Html.DisplayFor(model => model.Id)
                                </dd>
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("Name ")
                                </dt>
                                <dd class="col-sm-9 p-2">
                                    @Html.DisplayFor(model => model.Name)
                                </dd>
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("Status ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                    @Html.DisplayFor(model => model.SubscriptionStatus)
                                </dd>
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("Offer Name ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                    @Html.DisplayFor(model => model.OfferId)
                                </dd>
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("Plan ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                    @Html.DisplayFor(model => model.PlanId)
                                </dd>
                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("Purchaser Email ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                    @Html.DisplayFor(model => model.Purchaser.EmailId)
                                    @Html.HiddenFor(model => model.Purchaser.EmailId)
                                </dd>

                                <dt class="col-sm-3 p-2 p10">
                                    @Html.DisplayName("Azure Tenant ID ")
                                </dt>
                                <dd class="col-sm-9 p-2 p10">
                                    @Html.DisplayFor(model => model.Purchaser.TenantId)
                                    @Html.HiddenFor(model => model.Purchaser.TenantId)
                                </dd>

                                @if (Model.SubscriptionParameters != null && Model.SubscriptionParameters.Count() > 0)
                                {

                                    for (int i = 0; i < Model.SubscriptionParameters.Count(); i++)
                                    {
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].Id)
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].PlanAttributeId)
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].ValueType)
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].PlanId)
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].OfferId)
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].SubscriptionId)
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].DisplayName)
                                        @Html.HiddenFor(model => model.SubscriptionParameters[i].Type)

                                        if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                        {
                                            <dt class="col-sm-3 p-2 p10 @Model.SubscriptionParameters[i].Type">
                                                @Html.DisplayFor(model => model.SubscriptionParameters[i].DisplayName, new { required = "required", @class = @Model.SubscriptionParameters[i].Type })
                                                @if (Model.SubscriptionParameters[i].IsRequired == true)
                                                {<span class="red-star @Model.SubscriptionParameters[i].Type">*</span>}


                                            </dt>
                                        }
                                        else
                                        {
                                            @if (Model.SubscriptionParameters[i].Type.ToLower() == "input")
                                            {
                                                <dt class="col-sm-3 p-2 p10 @Model.SubscriptionParameters[i].Type">
                                                    @Html.DisplayFor(model => model.SubscriptionParameters[i].DisplayName)
                                                </dt>
                                            }
                                        }

                                        @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                        {
                                            @if (Model.SubscriptionParameters[i].FromList == true)
                                            {
                                                var data = Model.SubscriptionParameters[i].ValuesList;
                                                var selectList = new SelectList(data.Split(','));


                                                <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                                    @if (Model.SubscriptionParameters[i].IsRequired == true)
                                                    {
                                                        @Html.DropDownList(string.Format("SubscriptionParameters[{0}].Value", @i), selectList, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @required = "required", name = string.Format("SubscriptionParameters[{0}].Value", @i), @id = string.Format("SubscriptionParameters_{0}__Value", @i) })

                                                    }
                                                    else
                                                    {
                                                        @Html.DropDownList(string.Format("SubscriptionParameters[{0}].Value", @i), selectList, new { @class = @Model.SubscriptionParameters[i].Type + " w200", name = string.Format("SubscriptionParameters[{0}].Value", @i), @id = string.Format("SubscriptionParameters_{0}__Value", @i) })

                                                    }

                                                </dd>

                                            }
                                            else if (Model.SubscriptionParameters[i].Htmltype == "date")
                                            {
                                                <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                                    @if (Model.SubscriptionParameters[i].IsRequired == true)
                                                    {
                                                        @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @required = "required", @type = @Model.SubscriptionParameters[i].Htmltype })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @type = @Model.SubscriptionParameters[i].Htmltype })
                                                    }

                                                </dd>
                                            }
                                            else
                                            {
                                                <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                                    @if (Model.SubscriptionParameters[i].IsRequired == true)
                                                    {
                                                        @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @required = "required", @type = @Model.SubscriptionParameters[i].Htmltype })
                                                    }
                                                    else
                                                    {
                                                        @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " w200", @type = @Model.SubscriptionParameters[i].Htmltype })
                                                    }

                                                </dd>
                                            }
                                        }
                                        else
                                        {
                                            @if (Model.SubscriptionParameters[i].Type.ToLower() == "input")
                                            {
                                                <dd class="col-sm-9 p-2 p10  @Model.SubscriptionParameters[i].Type">
                                                    @Html.DisplayFor(model => model.SubscriptionParameters[i].Value)
                                                    @Html.HiddenFor(model => model.SubscriptionParameters[i].Value)
                                                </dd>
                                            }
                                        }
                                    }

                                }

                            </dl>

                           


                                            
                                    </div>
                                </div>
                            </div>
                        </div>
                    
                    </div>
                        <div class="col-md-4 mb-0 d-flex flex-column p-0 m-0">
                            <div class="row flex-grow-0 mb-4">
                                <span class="cm-section-subheading">Subscription Process</span>
                                <span><small>Steps involved in the WorkPoint365 Subscription fulfillment process.</small></span>
                            </div>
                            <div class="row flex-fill">
                                <div class="process-group">
                                    <div class="process-step completed d-flex">
                                        <div class="flex-column flex-grow-0 text-center">
                                            <div class="process-step-icon">
                                                <i class="fa fa-check fa-1x" aria-hidden="true"></i>
                                            </div>
                                            <div class="vr"></div>
                                        </div>
                                        <div class="process-step-detail flex-column flex-fill">
                                            <span class="heading">Create Azure Resource</span>
                                            <span class="description"><small>Complete: Create a subscription to a WP365 Plan in your Azure Tenant.</small></span>
                                        </div>
                                    </div>
                                    <div class="process-step current d-flex">
                                        <div class="flex-column flex-grow-0 text-center">
                                            <div class="process-step-icon">
                                                2 <!-- <i class="fa fa-circle fa-1x" aria-hidden="true"></i>-->
                                            </div>
                                            <div class="vr"></div>
                                        </div>
                                        <div class="process-step-detail flex-column flex-fill">
                                            @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                            {
                                                <span class="heading">Review Subscription</span>
                                                <span class="description"><small>Current: Review subscription details and confirm.</small></span>
                                            }
                                            @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.Subscribed)
                                            {
                                                <span class="heading">Update Subscription</span>
                                                <span class="description"><small>Current: Review subscription details and confirm.</small></span>
                                            }
                                        </div>
                                     </div>
                                    <div class="process-step pending d-flex">
                                        <div class="flex-column flex-grow-0 text-center">
                                            <div class="process-step-icon">
                                                3 <!-- <i class="fa fa-circle-o fa-1x" aria-hidden="true"></i>-->
                                            </div>
                                            <div class="vr"></div>
                                        </div>
                                        <div class="process-step-detail flex-column flex-fill">
                                            @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                            {
                                                <span class="heading">WorkPoint License Fulfillment</span>
                                                <span class="description"><small>Waiting: WorkPoint will provision the licenses required and deliver license key plus installer instructions by email.</small></span>
                                            }
                                            @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.Subscribed)
                                            {
                                                <span class="heading">WorkPoint License Update</span>
                                                <span class="description"><small>Waiting: WorkPoint update the licenses. <em>Note:</em> unsubscriping will take effect at the end of the current subscription term.</small></span>
                                            }
                                        </div>
                                    </div>
                                    <div class="process-step finish d-flex">
                                        <div class="flex-column flex-grow-0 text-center">
                                            <div class="process-step-icon">
                                                <i class="fa fa-flag-o fa-1x" aria-hidden="true"></i>
                                            </div>
                                            <div class="vr"></div>
                                        </div>
                                        <div class="process-step-detail flex-column flex-fill">
                                            <span class="heading">Finish</span>
                                            <span class="description"><small>Install or use WorkPoint365.</small></span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row align-content-end">
                                <div class="p-2 process-controls text-end">
                                    @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.Subscribed)
                                    {
                                        <button type="submit" asp-action="SubscriptionOperation" asp-route-subscriptionId="@Model.Id" asp-route-planId="@Model.PlanId" asp-route-operation="Deactivate" class="cm-button-danger text-right">Unsubscribe</button>
                                        <button type="submit" asp-action="Subscriptions" class="cm-button-default text-end">Go to Subscription List</button>
                                    }
                                    @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && Model.IsAutomaticProvisioningSupported == true)
                                    {
                                        <a onclick="SubscriptionOperation('@Model.Id','@Model.PlanId','Activate')" id="btnActive" class="cm-button-default text-end">Activate</a>
                                    }
                                    @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && Model.IsAutomaticProvisioningSupported == false)
                                    {
                                        <button type="button" onclick="SubscriptionOperation('@Model.Id','@Model.PlanId','Activate')" id="btnActive" class="cm-button-default text-right">Subscribe</button>
                                        <!-- <a onclick="SubscriptionOperation('@Model.Id','@Model.PlanId','Activate')" id="btnActive" class="cm-button-default text-end" style="text-decoration:none;">Subscribe</a> -->
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
                </div>
        </form>
    </div>
}
else
{
    <div class="pt-5">
        <div class="card p-3 logo">
            <div class="text-center">
                <h1 class="display-4">Welcome</h1>
            </div>
            <div class="text-center">
                <p>To purchase the WorkPoint365 SaaS offer in <a href="https://docs.microsoft.com/en-us/azure/marketplace">Azure Marketplace <i class="fa fa-external-link" aria-hidden="true"></i></a></p>

                <div class="d-flex flex-row">
                    <div class="flex-fill"></div>
                    <div class="flex-grow-0 text-start">
                        <ul>
                            <li>Search for <b> WorkPoint365 </b> offers</li>
                            <li>Click <b> Create</b> to subscribe to the offer, specifying your Azure Resource Group and Billing details.</li>
                            <li>After the subscription is created, click <b>Configure Account </b> to initiate the fulfillment process</li>
                        </ul>
                    </div>
                    <div class="flex-fill"></div>
                </div>

                <p>For all questions about WorkPoint365 services and subscriptions, contact <a href="https://workpoint365.com/products-solutions/workpoint-365">WorkPoint Sales <i class="fa fa-external-link" aria-hidden="true"></i></a></p>

                <img src="~/imgs/wp-image-installer.png" alt="WorkPoint365"/>

            </div>
        </div>
    </div>
}
<script type="text/javascript">

    function SubscriptionOperation(subscriptionId, planId, operation) {
        if (validate()) {
            var formobject = $('#frmIndex').serialize();
            $.ajax({
                url: '/Home/SubscriptionOperation',
                type: 'POST',
                data: formobject + "&subscriptionId=" + subscriptionId + "&planId=" + planId + "&operation=" + operation,
                cache: false,
                success: function (result) {
                    $('#divIndex').html(result);
                },
                Error:
                    function (result) {
                        $('#divIndex').html(result);
                    }
            });
        }
        else {
            swal({
                title: "Required",
                text: "Please fill all required values",
                icon: "warning"
            })

        }
    }


    function validate() {
        var valid = true;
        $(':input[required]:visible').each(function () {
            if ($(this).val() == "") //check loginc here
                return valid = false;
        });
        return valid;
    }
</script>